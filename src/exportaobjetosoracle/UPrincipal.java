/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package exportaobjetosoracle;

import controle.Controladora;
import entidades.ConfiguracaoConexaoOracle;
import entidades.Funcao;
import entidades.Job;
import entidades.LeitorXmlConfiguracoesOracle;
import entidades.ObjetoOracle;
import entidades.Procedure;
import entidades.Script;
import entidades.View;
import java.awt.Rectangle;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author F1852
 */
public class UPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form UPrincipal
     */
    public UPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jProgressBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanelConsulta = new javax.swing.JPanel();
        txtPalavraPesquisa = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListObjetos = new javax.swing.JList();
        btnExportarObjetos = new javax.swing.JButton();
        jCheckBoxSelecionarTodos = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        lblTotalRegistros = new javax.swing.JLabel();
        jPanelConfiguracao = new javax.swing.JPanel();
        txtUsuarioConn = new javax.swing.JTextField();
        txtPortaConn = new javax.swing.JTextField();
        txtHostConn = new javax.swing.JTextField();
        txtServicoConn = new javax.swing.JTextField();
        txtSenhaConn = new javax.swing.JTextField();
        btnConexaoOralce = new javax.swing.JButton();
        btnSalvarConfigConexao = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtUsuarioConnTeste = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSenhaConnTeste = new javax.swing.JTextField();
        txtServicoConnTeste = new javax.swing.JTextField();
        txtHostConnTeste = new javax.swing.JTextField();
        txtPortaConnTeste = new javax.swing.JTextField();
        btnAtualizarConfig = new javax.swing.JButton();
        lblStatusConexaoProd = new javax.swing.JLabel();
        lblStatusConexaoTeste = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanelJobs = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtPalavraConsultaJob = new javax.swing.JTextField();
        btnConsultarJobs = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListJobs = new javax.swing.JList();
        jLabel12 = new javax.swing.JLabel();
        txtTotalResultsJobs = new javax.swing.JTextField();
        jCheckBoxSelAllJobs = new javax.swing.JCheckBox();
        btnSalvarListaJobs = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Exporta objetos Oracle");
        setLocationByPlatform(true);

        jProgressBar.setToolTipText("Barra de Progresso.");
        jProgressBar.setStringPainted(true);

        jLabel1.setText("by hauchoa@gmail.com");

        jTabbedPanePrincipal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTabbedPanePrincipal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPanePrincipalStateChanged(evt);
            }
        });

        txtPalavraPesquisa.setToolTipText("Palavra-chave para pesquisa.");

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        jListObjetos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jListObjetos.setToolTipText("Lista de objetos");
        jListObjetos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jListObjetos);

        btnExportarObjetos.setText("Exportar");
        btnExportarObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarObjetosActionPerformed(evt);
            }
        });

        jCheckBoxSelecionarTodos.setText("Selecionar todos");
        jCheckBoxSelecionarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelecionarTodosActionPerformed(evt);
            }
        });

        jLabel2.setText("Total de Registros:");

        lblTotalRegistros.setText("0");

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtPalavraPesquisa)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConsultaLayout.createSequentialGroup()
                        .addComponent(btnExportarObjetos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxSelecionarTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConsultar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConsultaLayout.createSequentialGroup()
                        .addGap(0, 409, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPalavraPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnExportarObjetos)
                    .addComponent(jCheckBoxSelecionarTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTotalRegistros))
                .addGap(6, 6, 6))
        );

        jTabbedPanePrincipal.addTab("Consulta", jPanelConsulta);

        txtUsuarioConn.setToolTipText("Usuário Conexão");

        txtPortaConn.setToolTipText("Porta Oracle");

        txtHostConn.setToolTipText("Host de Conexão (IP)");

        txtServicoConn.setToolTipText("Serviço Conexão");

        txtSenhaConn.setToolTipText("Senha Conexão");

        btnConexaoOralce.setText("Testa conexão");
        btnConexaoOralce.setToolTipText("Teste de Conexão");
        btnConexaoOralce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConexaoOralceActionPerformed(evt);
            }
        });

        btnSalvarConfigConexao.setText("Salvar");
        btnSalvarConfigConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarConfigConexaoActionPerformed(evt);
            }
        });

        jLabel3.setText("Usuário:");

        jLabel4.setText("Senha:");

        jLabel5.setText("Serviço:");

        jLabel6.setText("Host:");

        jLabel7.setText("Porta:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Base de Produção");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Base de Teste");

        btnAtualizarConfig.setText("Atualizar");
        btnAtualizarConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarConfigActionPerformed(evt);
            }
        });

        lblStatusConexaoProd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusConexaoProd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lblStatusConexaoTeste.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusConexaoTeste.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel10.setText("Status:");

        javax.swing.GroupLayout jPanelConfiguracaoLayout = new javax.swing.GroupLayout(jPanelConfiguracao);
        jPanelConfiguracao.setLayout(jPanelConfiguracaoLayout);
        jPanelConfiguracaoLayout.setHorizontalGroup(
            jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfiguracaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConexaoOralce, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelConfiguracaoLayout.createSequentialGroup()
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addComponent(jLabel3))
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblStatusConexaoProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSenhaConn)
                            .addComponent(txtServicoConn)
                            .addComponent(txtHostConn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPortaConn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(txtUsuarioConn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsuarioConnTeste)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(txtSenhaConnTeste)
                    .addComponent(txtServicoConnTeste)
                    .addComponent(txtHostConnTeste)
                    .addComponent(txtPortaConnTeste)
                    .addComponent(btnSalvarConfigConexao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStatusConexaoTeste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtualizarConfig)
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanelConfiguracaoLayout.setVerticalGroup(
            jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfiguracaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelConfiguracaoLayout.createSequentialGroup()
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuarioConn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsuarioConnTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSenhaConn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtSenhaConnTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtServicoConn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtServicoConnTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHostConn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtHostConnTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPortaConn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtPortaConnTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblStatusConexaoProd, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                            .addComponent(lblStatusConexaoTeste, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarConfigConexao)
                    .addComponent(btnConexaoOralce)
                    .addComponent(btnAtualizarConfig))
                .addContainerGap(323, Short.MAX_VALUE))
        );

        jTabbedPanePrincipal.addTab("Configurações", jPanelConfiguracao);

        jLabel11.setText("Palavra consulta:");

        txtPalavraConsultaJob.setToolTipText("Você pode separar palavras com ';' (delete;obter;import)");

        btnConsultarJobs.setText("Consulta Jobs");
        btnConsultarJobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarJobsActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jListJobs);

        jLabel12.setText("Total de resultados:");

        txtTotalResultsJobs.setEditable(false);

        jCheckBoxSelAllJobs.setText("Selecionar Todos");
        jCheckBoxSelAllJobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelAllJobsActionPerformed(evt);
            }
        });

        btnSalvarListaJobs.setText("Salvar Lista");
        btnSalvarListaJobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarListaJobsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelJobsLayout = new javax.swing.GroupLayout(jPanelJobs);
        jPanelJobs.setLayout(jPanelJobsLayout);
        jPanelJobsLayout.setHorizontalGroup(
            jPanelJobsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJobsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelJobsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelJobsLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPalavraConsultaJob))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJobsLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalResultsJobs, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxSelAllJobs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalvarListaJobs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addComponent(btnConsultarJobs))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanelJobsLayout.setVerticalGroup(
            jPanelJobsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelJobsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelJobsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtPalavraConsultaJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelJobsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultarJobs)
                    .addComponent(jLabel12)
                    .addComponent(txtTotalResultsJobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxSelAllJobs)
                    .addComponent(btnSalvarListaJobs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanePrincipal.addTab("Jobs", jPanelJobs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPanePrincipal)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPanePrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConexaoOralceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConexaoOralceActionPerformed
        try {
            LeitorXmlConfiguracoesOracle lXmlOra = new LeitorXmlConfiguracoesOracle();
            ConfiguracaoConexaoOracle configCon =  lXmlOra.obterConfiguracoes();                        
            
            Controladora c = new Controladora();

            boolean testeConn = c.testeConexao(configCon.getUsuarioConexao(), 
                                               configCon.getSenhaConexao(), 
                                               configCon.getServicoOracle(), 
                                               configCon.getHostConexao(), 
                                               configCon.getPortaOracleConexao());
            
            if (testeConn){
                JOptionPane.showMessageDialog(null, "CONEXÃO REALIZADA COM SUCESSO!");
                this.lblStatusConexaoProd.setText("OK");
            }else{
                JOptionPane.showMessageDialog(null, "CONEXÃO NÃO REALIZADA!");                
                this.lblStatusConexaoProd.setText("ERRO");
            }
            
            boolean testeConnTeste = c.testeConexao(configCon.getUsuarioConexaoTeste(), 
                                               configCon.getSenhaConexaoTeste(), 
                                               configCon.getServicoOracleTeste(), 
                                               configCon.getHostConexaoTeste(), 
                                               configCon.getPortaOracleConexaoTeste());
            
            if (testeConnTeste){
                JOptionPane.showMessageDialog(null, "CONEXÃO REALIZADA COM SUCESSO!\n(Base Teste)");
                this.lblStatusConexaoTeste.setText("OK");
            }else{
                JOptionPane.showMessageDialog(null, "CONEXÃO NÃO REALIZADA!\n(Base Teste) "); 
                this.lblStatusConexaoTeste.setText("ERRO");
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_btnConexaoOralceActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        Controladora c = new Controladora();
        Connection conn=null;
        try {   
            LeitorXmlConfiguracoesOracle lXmlOra = new LeitorXmlConfiguracoesOracle();
            ConfiguracaoConexaoOracle configCon =  lXmlOra.obterConfiguracoes();            
                        
            conn = c.conectarOracle(configCon.getUsuarioConexao(), 
                                               configCon.getSenhaConexao(), 
                                               configCon.getServicoOracle(), 
                                               configCon.getHostConexao(), 
                                               configCon.getPortaOracleConexao());
            
            DefaultListModel dlm = new DefaultListModel();      
            int contador=0;
            Rectangle r = new Rectangle();
            
            List<ObjetoOracle> objsOracle = new ArrayList<ObjetoOracle>();            
            this.atualizaProgressBar("Consultando lista de Views do banco. Aguarde.", 0, r);
            List<View> vws = c.obterListaDeViews(txtPalavraPesquisa.getText(), conn);
            r = this.redefiniProgressBar(0, vws.size());
            for (View visao : vws) {
                objsOracle.add(visao);
                contador++;
                this.atualizaProgressBar("Obtendo lista de Views.", contador, r);
            }
            this.setVisible(false);
            this.atualizaProgressBar("Consultando lista de Procedures do banco. Aguarde.", 0, r);
            contador=0;
            List<Procedure> prcs = c.obterListaDeProcedure(txtPalavraPesquisa.getText(), conn);
            for (Procedure procedure : prcs) {
                objsOracle.add(procedure);
                contador++;
                this.atualizaProgressBar("Obtendo lista de Procedures.", contador, r);                
            }

            this.atualizaProgressBar("Consultando lista de Funções do banco. Aguarde.", 0, r);
            contador=0;            
            List<Funcao> fncs = c.obterListaDeFuncoes(txtPalavraPesquisa.getText(), conn);
            for (Funcao funcao : fncs) {
                objsOracle.add(funcao);
                contador++;
                this.atualizaProgressBar("Obtendo lista de Funções.", contador, r);                
            }        
            
            this.atualizaProgressBar("Gerando Obejtos Oracle do sistema. Aguarde.", 0, r);
            contador=0;
            for (ObjetoOracle objeto : objsOracle) {
                dlm.addElement(objeto);
                contador++;
                this.atualizaProgressBar(null, contador, r);
            }
            
            lblTotalRegistros.setText(contador+"");
            this.atualizaProgressBar("Povoando lista.", jProgressBar.getMaximum(), r);
            jListObjetos.setModel(dlm);
            this.atualizaProgressBar("Pronto.", jProgressBar.getMaximum(), r);
            c.fecharConexaoOracle(conn);      
            
        } catch (Exception e) {                        
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }finally{
            this.setVisible(true);
        }            
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnExportarObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarObjetosActionPerformed
        try {
            
            JFileChooser jfc = new JFileChooser();
            jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            jfc.showOpenDialog(null);
            
            
            Controladora c = new Controladora();
            List<ObjetoOracle> objs =this.jListObjetos.getSelectedValuesList();
           
            Rectangle r = this.redefiniProgressBar(0, objs.size());
            int contador=0;
            for (ObjetoOracle objetos : objs) {                
                c.criarArquivoTxtObjetoOracle(objetos, jfc.getSelectedFile().getPath());
                contador++;
                this.atualizaProgressBar(null, contador, r);
            }  
            
            JOptionPane.showMessageDialog(null, "Exportação realizada com sucesso.\n"+contador+" objetos exportados em "+jfc.getSelectedFile().getPath());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_btnExportarObjetosActionPerformed

    private void jCheckBoxSelecionarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelecionarTodosActionPerformed
        if (this.jCheckBoxSelecionarTodos.isSelected()){
            String qtdRegistor = lblTotalRegistros.getText();            
            jListObjetos.setSelectionInterval(0, Integer.parseInt(qtdRegistor)-1);
        }else{
            jListObjetos.clearSelection();
        }
    }//GEN-LAST:event_jCheckBoxSelecionarTodosActionPerformed

    private void btnSalvarConfigConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarConfigConexaoActionPerformed
        try {
            ConfiguracaoConexaoOracle config = new ConfiguracaoConexaoOracle();
            config.setHostConexao(txtHostConn.getText());
            config.setHostConexaoTeste(txtHostConnTeste.getText());
            
            config.setPortaOracleConexao(txtPortaConn.getText());
            config.setPortaOracleConexaoTeste(txtPortaConnTeste.getText());
            
            config.setSenhaConexao(txtSenhaConn.getText());
            config.setSenhaConexaoTeste(txtSenhaConnTeste.getText());
            
            config.setServicoOracle(txtServicoConn.getText());
            config.setServicoOracleTeste(txtServicoConnTeste.getText());
            
            config.setUsuarioConexao(txtUsuarioConn.getText());
            config.setUsuarioConexaoTeste(txtUsuarioConnTeste.getText());
            
            config.gerarXml();
            
            JOptionPane.showMessageDialog(null, "XML salvo com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_btnSalvarConfigConexaoActionPerformed

    private void btnAtualizarConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarConfigActionPerformed
        try {
           LeitorXmlConfiguracoesOracle lXmlOra = new LeitorXmlConfiguracoesOracle();
           ConfiguracaoConexaoOracle configCon =  lXmlOra.obterConfiguracoes();
            
           txtHostConn.setText(configCon.getHostConexao());
           txtHostConnTeste.setText(configCon.getHostConexaoTeste());
           
           txtPortaConn.setText(configCon.getPortaOracleConexao());
           txtPortaConnTeste.setText(configCon.getPortaOracleConexaoTeste());
           
           txtSenhaConn.setText(configCon.getSenhaConexao());
           txtSenhaConnTeste.setText(configCon.getSenhaConexaoTeste());
           
           txtServicoConn.setText(configCon.getServicoOracle());
           txtServicoConnTeste.setText(configCon.getServicoOracleTeste());
           
           txtUsuarioConn.setText(configCon.getUsuarioConexao());
           txtUsuarioConnTeste.setText(configCon.getUsuarioConexaoTeste());
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_btnAtualizarConfigActionPerformed

    private void jTabbedPanePrincipalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPanePrincipalStateChanged
        try {
            if (this.jTabbedPanePrincipal.getSelectedIndex() == 1){
                this.btnAtualizarConfigActionPerformed(null);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_jTabbedPanePrincipalStateChanged

    private void btnConsultarJobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarJobsActionPerformed
        Controladora c = new Controladora();
        Connection conn=null;
        try {   
            LeitorXmlConfiguracoesOracle lXmlOra = new LeitorXmlConfiguracoesOracle();
            ConfiguracaoConexaoOracle configCon =  lXmlOra.obterConfiguracoes();            
                        
            conn = c.conectarOracle(configCon.getUsuarioConexao(), 
                                               configCon.getSenhaConexao(), 
                                               configCon.getServicoOracle(), 
                                               configCon.getHostConexao(), 
                                               configCon.getPortaOracleConexao());
            
            DefaultListModel dlm = new DefaultListModel();      
            int contador=0;
            Rectangle r = new Rectangle();
            
            List<ObjetoOracle> objsOracle = new ArrayList<ObjetoOracle>();            
            this.atualizaProgressBar("Consultando lista de Jobs do banco. Aguarde.", 0, r);
            
            String linhaDePesquisa = txtPalavraConsultaJob.getText();
            String[] dados = null;
            dados = linhaDePesquisa.split("\\;",-1);
            List<Job> jbs = new ArrayList<Job>();
            
            for (String chave : dados) {
             jbs.addAll(c.obterListaDeJobs(chave, conn));   
            }
            
            r = this.redefiniProgressBar(0, jbs.size());
            for (Job job : jbs) {
                objsOracle.add(job);
                contador++;
                this.atualizaProgressBar("Obtendo lista de Jobs.", contador, r);
            }
            //this.setVisible(false); 
            
            this.atualizaProgressBar("Gerando Obejtos Oracle do sistema. Aguarde.", 0, r);
            contador=0;
            for (ObjetoOracle objeto : objsOracle) {
                dlm.addElement(objeto);
                contador++;
                this.atualizaProgressBar(null, contador, r);
            }
            
            txtTotalResultsJobs.setText(Integer.toString(contador));
            this.atualizaProgressBar("Povoando lista.", jProgressBar.getMaximum(), r);
            jListJobs.removeAll();
            jListJobs.setModel(dlm);
            this.atualizaProgressBar("Pronto.", jProgressBar.getMaximum(), r);
            c.fecharConexaoOracle(conn);      
            
        } catch (Exception e) {                        
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }finally{
            this.setVisible(true);
        }
    }//GEN-LAST:event_btnConsultarJobsActionPerformed

    private void jCheckBoxSelAllJobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelAllJobsActionPerformed
        if (this.jCheckBoxSelAllJobs.isSelected()){
            String qtdRegistor = txtTotalResultsJobs.getText();            
            jListJobs.setSelectionInterval(0, Integer.parseInt(qtdRegistor)-1);
        }else{
            jListJobs.clearSelection();
        }
    }//GEN-LAST:event_jCheckBoxSelAllJobsActionPerformed

    private void btnSalvarListaJobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarListaJobsActionPerformed
        try {
            
            JFileChooser jfc = new JFileChooser();
            jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            jfc.showOpenDialog(null);
            
            
            Controladora c = new Controladora();
            List<ObjetoOracle> objs =this.jListJobs.getSelectedValuesList();
           
            //Rectangle r = this.redefiniProgressBar(0, objs.size());
            //int contador=0;
            //for (ObjetoOracle objetos : objs) {                
            //    contador++;
            //    this.atualizaProgressBar(null, contador, r);
            //}  
            c.criarListaTxtObjetoOracle(objs, jfc.getSelectedFile().getPath());
            JOptionPane.showMessageDialog(null, "Exportação realizada com sucesso.\n Lista de objetos salvos em "+jfc.getSelectedFile().getPath());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:\n"+e.getMessage());
        }
    }//GEN-LAST:event_btnSalvarListaJobsActionPerformed

    private Rectangle redefiniProgressBar(int minimo, int maximo){ 
        Rectangle r = this.jProgressBar.getBounds();
        r.x=0;
        r.y=0;       
        
        this.jProgressBar.setMinimum(minimo);                        
        this.jProgressBar.setMaximum(maximo);        
        
        return r;
    }

    private void atualizaProgressBar(String texto, int valor, Rectangle r) throws InterruptedException{
        this.jProgressBar.setString(texto);
        this.jProgressBar.setValue(valor);
        this.jProgressBar.paintImmediately(r);        
        Thread.sleep(10);
    }    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarConfig;
    private javax.swing.JButton btnConexaoOralce;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultarJobs;
    private javax.swing.JButton btnExportarObjetos;
    private javax.swing.JButton btnSalvarConfigConexao;
    private javax.swing.JButton btnSalvarListaJobs;
    private javax.swing.JCheckBox jCheckBoxSelAllJobs;
    private javax.swing.JCheckBox jCheckBoxSelecionarTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jListJobs;
    private javax.swing.JList jListObjetos;
    private javax.swing.JPanel jPanelConfiguracao;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JPanel jPanelJobs;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    private javax.swing.JLabel lblStatusConexaoProd;
    private javax.swing.JLabel lblStatusConexaoTeste;
    private javax.swing.JLabel lblTotalRegistros;
    private javax.swing.JTextField txtHostConn;
    private javax.swing.JTextField txtHostConnTeste;
    private javax.swing.JTextField txtPalavraConsultaJob;
    private javax.swing.JTextField txtPalavraPesquisa;
    private javax.swing.JTextField txtPortaConn;
    private javax.swing.JTextField txtPortaConnTeste;
    private javax.swing.JTextField txtSenhaConn;
    private javax.swing.JTextField txtSenhaConnTeste;
    private javax.swing.JTextField txtServicoConn;
    private javax.swing.JTextField txtServicoConnTeste;
    private javax.swing.JTextField txtTotalResultsJobs;
    private javax.swing.JTextField txtUsuarioConn;
    private javax.swing.JTextField txtUsuarioConnTeste;
    // End of variables declaration//GEN-END:variables
  

}
